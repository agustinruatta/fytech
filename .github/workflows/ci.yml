# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: fytech_test
          POSTGRES_USER: fytech_test
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    - run: sed -i 's/throw new Error(`Unable/console.log(`BEFORE SECOND CATCH`);console.log(err);console.trace(err);throw new Error(`Unable/g' ./node_modules/typeorm/commands/CommandUtils.js
    - run: sed -i 's/PlatformTools_1.PlatformTools/console.log(`BEFORE ERROR CATCH`);console.log(err);console.log(typeof err);PlatformTools_1.PlatformTools/g' ./node_modules/typeorm/commands/MigrationRunCommand.js
    - run: sed -i 's/await dataSource.runMigrations(options);/console.log(`BEFORE RUN MIGRATIONS`);await dataSource.runMigrations(options);/g' ./node_modules/typeorm/commands/MigrationRunCommand.js
    - run: sudo apt-get install -y postgresql-client
    - run: pg_isready -h localhost -d fytech_test -p 5433 -U fytech_test
    - run: npm run migrations:run:test
    - run: npm test
